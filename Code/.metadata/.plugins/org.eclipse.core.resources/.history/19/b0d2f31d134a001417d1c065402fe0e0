package com.tae.store.helpers;

import java.util.ArrayList;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;

import com.tae.store.model.Product;

public class DatabaseHandler extends SQLiteOpenHelper {

	// All Static variables
	// Database Version
	private static final int DATABASE_VERSION = 1;

	// Database Name
	private static final String DATABASE_NAME = "USER_BAG";

	// Contacts table name
	private static final String TABLE_PRODUCTS = "products";

	// Contacts Table Columns names
	private static final String KEY_ID = "prod_id";
	private static final String KEY_NAME = "prod_name";
	private static final String KEY_DESC = "prod_desc";
	private static final String KEY_PRICE = "prod_price";
	private static final String KEY_SIZE = "prod_size";
	private static final String KEY_MAIN_PIC = "prod_main_pic";
	private static final String KEY_OFFER = "prod_offer";

	ArrayList<Product> product_list = new ArrayList<Product>();

	public DatabaseHandler(Context context) {
		super(context, DATABASE_NAME, null, DATABASE_VERSION);
	}

	@Override
	public void onCreate(SQLiteDatabase db) {
		String CREATE_PRODUCT_TABLE = "CREATE TABLE IF NOT EXISTS "
				+ TABLE_PRODUCTS + "(" + KEY_ID + " int(11) NOT NULL,"
				+ KEY_NAME + " varchar(50) NOT NULL," + KEY_DESC
				+ " text NOT NULL," + KEY_PRICE + " float NOT NULL,"
				+ KEY_OFFER + " tinyint(1) NOT NULL," + KEY_MAIN_PIC
				+ " int(11) DEFAULT NULL," + ")";

		db.execSQL(CREATE_PRODUCT_TABLE);
	}

	@Override
	public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
		// Drop older table if existed
		db.execSQL("DROP TABLE IF EXISTS " + TABLE_PRODUCTS);

		// Create tables again
		onCreate(db);
	}

	public void addProduct(Product product) {
		SQLiteDatabase db = this.getWritableDatabase();
		ContentValues values = new ContentValues();

		values.put(KEY_ID, product.getId());
		values.put(KEY_NAME, product.getName());
		values.put(KEY_DESC, product.getDescription());
		values.put(KEY_PRICE, product.getPrice());
		values.put(KEY_MAIN_PIC, product.getUrl_pic());
		values.put(KEY_OFFER, product.getPromoted() ? 1 : 0);

		db.insert(TABLE_PRODUCTS, null, values);
		db.close();
	}

	// Getting All Contacts
	public ArrayList<Product> getProducts() {
		try {
			product_list.clear();

			// Select All Query
			String selectQuery = "SELECT  * FROM " + TABLE_PRODUCTS;

			SQLiteDatabase db = this.getWritableDatabase();
			Cursor cursor = db.rawQuery(selectQuery, null);

			// looping through all rows and adding to list
			if (cursor.moveToFirst()) {
				do {
					Product product = new Product();
					product.setId(cursor.getString(0));
					product.setName(cursor.getString(1));
					product.setDescription(cursor.getString(2));
					product.setPrice(Float.parseFloat(cursor.getString(3)));
					product.setUrl_pic(cursor.getString(4));
					if (cursor.getInt(5) == 1) {
						product.setPromoted(true);
					} else {
						product.setPromoted(false);
					}

					product_list.add(product);
				} while (cursor.moveToNext());
			}

			cursor.close();
			db.close();
			return product_list;
		} catch (Exception e) {
			Log.e("getProducts", "" + e);
		}
		return product_list;
	}
}
