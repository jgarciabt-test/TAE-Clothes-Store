package com.tae.store.fragments;

import java.util.ArrayList;

import android.content.res.TypedArray;
import android.os.Bundle;
import android.util.DisplayMetrics;
import android.util.Log;
import android.view.Display;
import android.view.LayoutInflater;
import android.view.Surface;
import android.view.View;
import android.view.ViewGroup;
import android.view.WindowManager;
import android.view.View.OnClickListener;
import android.widget.ImageView;
import android.widget.LinearLayout;

import com.actionbarsherlock.app.SherlockFragment;
import com.squareup.picasso.Picasso;
import com.tae.store.R;
import com.tae.store.model.Product;
import com.tae.store.utilities.ServerUrl;

public class ItemFragment extends SherlockFragment {

	private Product product;
	private ArrayList<String> urlArray;
	private ImageView mainPicture;
	private LinearLayout mCarouselContainer;
	private float initial_items = 4.5f;

	public ItemFragment(Product product) {
		this.product = product;
	}

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {

		ViewGroup rootView = (ViewGroup) inflater.inflate(
				R.layout.fragment_item_details, null, false);

		mCarouselContainer = (LinearLayout) rootView.findViewById(R.id.carousel);
		mainPicture = (ImageView) rootView
				.findViewById(R.id.iv_item_detail_page);

		Display display = ((WindowManager) getActivity().getSystemService(getActivity().WINDOW_SERVICE))
                .getDefaultDisplay();

        int orientation = display.getRotation();

        if (orientation == Surface.ROTATION_90
                || orientation == Surface.ROTATION_270) {
        	initial_items = 7.5f;           
        } else{
        	initial_items = 4.5f;
        }
		
		
		Picasso.with(getActivity().getApplicationContext())
				.load(ServerUrl.BASE_URL + ServerUrl.IMG + product.getUrl_pic())
				.placeholder(R.drawable.ic_launcher).into(mainPicture);
		return rootView;
	}
	
	
	
	 @Override
	public void onViewCreated(View view, Bundle savedInstanceState) {
		super.onViewCreated(view, savedInstanceState);
		
		
	}

	protected void onPostCreateView(Bundle savedInstanceState) {
	                
	     // Compute the width of a carousel item based on the screen width and number of initial items.
	        final DisplayMetrics displayMetrics = new DisplayMetrics();
	        getActivity().getWindowManager().getDefaultDisplay().getMetrics(displayMetrics);
	        final int imageWidth = (int) (displayMetrics.widthPixels / initial_items);

	        // Populate the carousel with items
	        ImageView imageItem;
	        for (int i = 0 ; i < urlArray.size() ; ++i) {
	            // Create new ImageView
	            imageItem = new ImageView(getActivity());

	            // Set the shadow background
	            //imageItem.setBackgroundResource(R.drawable.shadow);

	            Picasso.with(getActivity()).load(urlArray.get(i)).into(imageItem); 
	            

	            // Set the size of the image view to the previously computed value
	            imageItem.setLayoutParams(new LinearLayout.LayoutParams(imageWidth, imageWidth));

	            imageItem.setOnClickListener(new OnClickListener() {
					
					@Override
					public void onClick(View v) {
						Log.v("CAROUSEL", "Pressed");
						mainPicture.setImageDrawable(((ImageView)v).getDrawable() );
						
					}
				});
	            
	            /// Add image view to the carousel container
	            mCarouselContainer.addView(imageItem);
	        }


}
