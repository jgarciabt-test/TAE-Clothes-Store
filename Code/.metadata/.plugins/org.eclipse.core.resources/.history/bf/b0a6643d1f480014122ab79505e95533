package com.tae.store.fragments;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.ImageButton;

import com.actionbarsherlock.app.SherlockFragment;
import com.android.volley.Response;
import com.android.volley.Response.Listener;
import com.android.volley.VolleyError;
import com.android.volley.VolleyLog;
import com.android.volley.toolbox.JsonArrayRequest;
import com.google.android.gms.maps.GoogleMap;
import com.tae.store.MainActivity;
import com.tae.store.R;
import com.tae.store.app.AppController;
import com.tae.store.model.Category;
import com.tae.store.utilities.ServerUrl;

public class MapFragment extends SherlockFragment{

	private ViewGroup rootView;
	private GoogleMap map;
	private ImageButton toList;
	
	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		
		
		if(rootView !=null){
			ViewGroup parent = (ViewGroup) rootView.getParent();
			if(parent != null){
				parent.removeView(rootView);
			}
		}
		rootView = (ViewGroup)inflater.inflate(R.layout.fragment_location, container, false);
				
		toList = (ImageButton) rootView.findViewById(R.id.btn_to_list);
		
		toList.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				MainActivity.replaceFragment(new StoreListFragment(), "STORE_LIST_FRAGMENT", true);
				
			}
		});
		
		return rootView;
	}

	private void makeRequest(){
		
		JsonArrayRequest request = new JsonArrayRequest(ServerUrl.BASE_URL+ServerUrl.GET_ALL_STORES,
				new Listener<JSONArray>() {
					public void onResponse(JSONArray response) {
						
							try {
								JSONObject obj = response.getJSONObject(0);
								JSONArray array = (JSONArray) obj.get("categories");
								for(int i=0;i<array.length();i++){
									obj = array.getJSONObject(i);
									Category cat = new Category();
									cat.setId(obj.getString("cat_id"));
									cat.setName(obj.getString("cat_name"));
									cat.setLower_price(obj.getString("cat_lowest_price"));
									cat.setUrl_pic(obj.getString("pic_url"));
									list.add(cat);
								}
								
							} catch (JSONException e) {
								e.printStackTrace();
							}
							
							adapter.notifyDataSetChanged();
							pDialog.dismiss();
					}
				}, new Response.ErrorListener() {
					@Override
					public void onErrorResponse(VolleyError error) {
						pDialog.dismiss();
						VolleyLog.d("VOLLEY_ERROR", "Error: " + error.getMessage());
					}
				});

		AppController.getInstance().addToRequestQueue(request);
	}

	@Override
	public void onSaveInstanceState(Bundle outState) {
		// TODO Auto-generated method stub
		super.onSaveInstanceState(outState);
	}

}
