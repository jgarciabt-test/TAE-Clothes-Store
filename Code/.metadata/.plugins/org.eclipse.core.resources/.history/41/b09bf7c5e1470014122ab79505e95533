package com.tae.store;

import java.io.IOException;
import java.util.ArrayList;

import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.ResponseHandler;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.BasicResponseHandler;
import org.apache.http.impl.client.DefaultHttpClient;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.AlertDialog;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;

import com.actionbarsherlock.app.SherlockActivity;
import com.tae.store.model.Category;
import com.tae.store.utilities.ServerUrl;

public class SplashScreen extends SherlockActivity {

	// Splash screen timer
	// private static int SPLASH_TIME_OUT = 3000;

	AlertDialog aDialog;
	Intent i;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.splashscreen);
		getSupportActionBar().hide();

		//menCategories = new ArrayList<Category>();
		//womenCategories = new ArrayList<Category>();
		//i = new Intent(SplashScreen.this, MainActivity.class);

		// makeRequestCategories();

		new LongOperation().execute(ServerUrl.BASE_URL
				+ ServerUrl.GET_ALL_CATEGORIES);

	}

//	private void makeRequestCategories() {
//
//		JsonArrayRequest request = new JsonArrayRequest(ServerUrl.BASE_URL
//				+ ServerUrl.GET_ALL_CATEGORIES, new Listener<JSONArray>() {
//			public void onResponse(JSONArray response) {
//				try {
//					JSONObject obj = response.getJSONObject(0);
//					JSONArray array = (JSONArray) obj.get("categories");
//					for (int i = 0; i < array.length(); i++) {
//						obj = array.getJSONObject(i);
//						Category cat = new Category();
//						cat.setId(obj.getString("cat_id"));
//						cat.setName(obj.getString("cat_name"));
//						cat.setLower_price(obj.getString("cat_lowest_price"));
//						cat.setUrl_pic(obj.getString("pic_url"));
//						if (cat.getMain_cat() == "Men") {
//							menCategories.add(cat);
//						} else {
//							womenCategories.add(cat);
//						}
//					}
//
//				} catch (JSONException e) {
//					e.printStackTrace();
//				}
//
//				i.putParcelableArrayListExtra("men", menCategories);
//				i.putParcelableArrayListExtra("women", womenCategories);
//				i.putExtra("test", "Test");
//
//				startActivity(i);
//				finish();
//			}
//		}, new Response.ErrorListener() {
//			@Override
//			public void onErrorResponse(VolleyError error) {
//				VolleyLog.d("VOLLEY_ERROR", "Error: " + error.getMessage());
//				AlertDialog.Builder builder = new AlertDialog.Builder(
//						SplashScreen.this);
//				builder.setMessage("No internet connection!")
//						.setCancelable(false)
//						.setPositiveButton("OK",
//								new DialogInterface.OnClickListener() {
//									public void onClick(DialogInterface dialog,
//											int id) {
//										finish();
//									}
//								});
//				AlertDialog alert = builder.create();
//				alert.show();
//			}
//		});
//
//		AppController.getInstance().addToRequestQueue(request);
//	}

	private class LongOperation extends AsyncTask<String, Void, Void> {

		private final HttpClient Client = new DefaultHttpClient();
		private String Content;
		private String Error = null;
		private ArrayList<Category> menCategories = new ArrayList<Category>();
		private ArrayList<Category> womenCategories = new ArrayList<Category>();

		// Call after onPreExecute method
		protected Void doInBackground(String... urls) {
			try {
				HttpGet httpget = new HttpGet(urls[0]);
				ResponseHandler<String> responseHandler = new BasicResponseHandler();
				Content = Client.execute(httpget, responseHandler);

				
				JSONObject obj = new JSONArray(Content).getJSONObject(0);
				JSONArray array = (JSONArray) obj.get("categories");
				for (int i = 0; i < array.length(); i++) {
					obj = array.getJSONObject(i);
					Category cat = new Category();
					cat.setId(obj.getString("cat_id"));
					cat.setName(obj.getString("cat_name"));
					cat.setLower_price(obj.getString("cat_lowest_price"));
					cat.setUrl_pic(obj.getString("pic_url"));
					if (cat.getMain_cat() == "Men") {
						menCategories.add(cat);
					} else {
						womenCategories.add(cat);
					}
				}
				
				
			} catch (ClientProtocolException e) {
				Error = e.getMessage();
				cancel(true);
			} catch (IOException e) {
				Error = e.getMessage();
				cancel(true);
			} catch (JSONException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			return null;
		}

		protected void onPostExecute(Void unused) {
			Log.v("ASYNC", Content);
			i = new Intent(SplashScreen.this, MainActivity.class);

			i.putExtra("test", Content);

			startActivity(i);
			finish();
		}

	}

}
