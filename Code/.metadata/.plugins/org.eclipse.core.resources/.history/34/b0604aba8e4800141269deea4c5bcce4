package com.tae.store.fragments;

import java.util.ArrayList;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.ProgressDialog;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.Toast;
import android.location.Geocoder;

import com.actionbarsherlock.app.SherlockFragment;
import com.android.volley.Response;
import com.android.volley.Response.Listener;
import com.android.volley.VolleyError;
import com.android.volley.VolleyLog;
import com.android.volley.toolbox.JsonArrayRequest;
import com.google.android.gms.maps.CameraUpdateFactory;
import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.SupportMapFragment;
import com.google.android.gms.maps.model.CameraPosition;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.MarkerOptions;
import com.tae.store.MainActivity;
import com.tae.store.R;
import com.tae.store.app.AppController;
import com.tae.store.helpers.LocationTracker;
import com.tae.store.model.Store;
import com.tae.store.utilities.ServerUrl;

public class MapFragment extends SherlockFragment {

	private ViewGroup rootView;
	private GoogleMap googleMap;
	private ImageButton btnToList;
	private ArrayList<Store> list = new ArrayList<Store>();
	private ProgressDialog pDialog;
	private ImageButton btnMyLocation;
	private ImageButton btnSearch;
	private LocationTracker locationTracker;
	private LatLng currentLocation;

	public MapFragment() {
	}

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {

		if (rootView != null) {
			ViewGroup parent = (ViewGroup) rootView.getParent();
			if (parent != null) {
				parent.removeView(rootView);
			}
		}
		rootView = (ViewGroup) inflater.inflate(R.layout.fragment_location,
				container, false);

		pDialog = new ProgressDialog(getActivity());
		pDialog.setMessage(getResources().getString(R.string.loading));
		pDialog.show();
		makeRequest();

		setUpMap();

		// To list listener
		btnToList = (ImageButton) rootView.findViewById(R.id.btn_to_list);
		btnToList.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				MainActivity.replaceFragment(new StoreListFragment(list),
						"STORE_LIST_FRAGMENT", true);
			}
		});

		// To list listener
		btnMyLocation = (ImageButton) rootView.findViewById(R.id.btn_location);
		btnMyLocation.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				if (locationTracker == null) {
					locationTracker = new LocationTracker(getActivity());
				}
				locationTracker.getLocation();
				if (locationTracker.canGetLocation()) {
					currentLocation = new LatLng(locationTracker.getLatitude(),
							locationTracker.getLongitude());
					moveCamera(currentLocation);
				} else {
					Toast.makeText(getActivity(),
							"GPS possition is not available",
							Toast.LENGTH_SHORT).show();
				}
			}
		});

		return rootView;
	}

	private void makeRequest() {

		JsonArrayRequest request = new JsonArrayRequest(ServerUrl.BASE_URL
				+ ServerUrl.GET_ALL_STORES, new Listener<JSONArray>() {
			public void onResponse(JSONArray response) {

				try {
					JSONObject obj = response.getJSONObject(0);
					JSONArray array = (JSONArray) obj.get("stores");
					for (int i = 0; i < array.length(); i++) {
						obj = array.getJSONObject(i);
						Store sto = new Store();
						sto.setId(obj.getString("sto_id"));
						sto.setName(obj.getString("sto_name"));
						sto.setAddress(obj.getString("sto_address"));
						sto.setPostCode(obj.getString("sto_pc"));
						sto.setCity(obj.getString("sto_city"));
						sto.setPhone(obj.getString("sto_phone"));
						sto.setOpeningHours(obj.getString("sto_opening"));
						sto.setLatitude(obj.getDouble("sto_lat"));
						sto.setLongitude(obj.getDouble("sto_lng"));
						list.add(sto);
					}

				} catch (JSONException e) {
					e.printStackTrace();
				}

				// adapter.notifyDataSetChanged();
				pDialog.dismiss();
				setMarkers();
			}
		}, new Response.ErrorListener() {
			@Override
			public void onErrorResponse(VolleyError error) {
				pDialog.dismiss();
				VolleyLog.d("VOLLEY_ERROR", "Error: " + error.getMessage());
			}
		});

		AppController.getInstance().addToRequestQueue(request);
	}

	private void setUpMap() {

		if (googleMap == null) {
			googleMap = ((SupportMapFragment) MainActivity.fragmentManager
					.findFragmentById(R.id.map)).getMap();
		}

		googleMap.setMapType(GoogleMap.MAP_TYPE_NORMAL);
		googleMap.setMyLocationEnabled(true);
		googleMap.getUiSettings().setMyLocationButtonEnabled(false);
		googleMap.getUiSettings().setZoomControlsEnabled(false);
		googleMap.getUiSettings().setZoomGesturesEnabled(true);
		googleMap.getUiSettings().setCompassEnabled(true);
		// googleMap.setOnMarkerClickListener(this);

	}

	
	private void searchAction(){
		Geodecoder geodecoder;
		
	}
	
	public void setMarkers() {

		googleMap.clear();
		// googleMap.setInfoWindowAdapter(new MyInfoWindowAdapter());
		Store store = null;

		for (int i = 0; i < list.size(); i++) {
			store = list.get(i);
			MarkerOptions m = new MarkerOptions().position(
					new LatLng(store.getLatitude(), store.getLongitude()))
					.title(store.getName());

			// m.icon(BitmapDescriptorFactory.fromResource(icon));
			googleMap.addMarker(m);
		}
	}

	private void moveCamera(LatLng position) {
		CameraPosition cameraPosition = new CameraPosition.Builder()
				.target(position).zoom(15).build();

		googleMap.animateCamera(CameraUpdateFactory
				.newCameraPosition(cameraPosition));
	}

	@Override
	public void onSaveInstanceState(Bundle outState) {
		// TODO Auto-generated method stub
		super.onSaveInstanceState(outState);
	}

}
