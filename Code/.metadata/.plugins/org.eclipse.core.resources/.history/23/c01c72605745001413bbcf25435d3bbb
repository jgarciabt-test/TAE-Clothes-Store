package com.tae.store;

import java.util.ArrayList;
import java.util.HashMap;

import android.annotation.SuppressLint;
import android.content.res.Configuration;
import android.content.res.TypedArray;
import android.graphics.Color;
import android.graphics.drawable.ColorDrawable;
import android.os.Bundle;
import android.support.v4.app.ActionBarDrawerToggle;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.widget.DrawerLayout;
import android.view.Gravity;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ListView;

import com.actionbarsherlock.app.SherlockFragmentActivity;
import com.actionbarsherlock.view.Menu;
import com.actionbarsherlock.view.MenuItem;
import com.tae.store.adapters.NavDrawerListAdapter;
import com.tae.store.fragments.CategoryFragment;
import com.tae.store.fragments.HomeFragment;
import com.tae.store.fragments.ProductListFragment;
import com.tae.store.model.NavDrawerItem;

@SuppressLint({ "InlinedApi", "NewApi" })
public class MainActivity extends SherlockFragmentActivity {

	private static final int NUM_PAGES = 5;

	// Fragments
	static public FragmentManager fragmentManager;
	static private String currentFragment;
	static public Fragment fragment;

	// Slide Pager
	static public HashMap<String, Fragment> fragmentMap;

	// Slide Menu
	private DrawerLayout mDrawerLayout;
	private ListView mDrawerList;
	private ActionBarDrawerToggle mDrawerToggle;
	private NavDrawerListAdapter adapter;
	private String[] navMenuTitles;
	private TypedArray navMenuIcons;
	private ArrayList<NavDrawerItem> navDrawerItems;

	

	// TODO Just for testing, to populate ImageViews
	static public ArrayList<String> generateData() {
		ArrayList<String> listData = new ArrayList<String>();
		listData.add("http://i62.tinypic.com/2iitkhx.jpg");
		listData.add("http://i61.tinypic.com/w0omeb.jpg");
		listData.add("http://i60.tinypic.com/w9iu1d.jpg");
		listData.add("http://i60.tinypic.com/iw6kh2.jpg");
		listData.add("http://i57.tinypic.com/ru08c8.jpg");
		listData.add("http://i60.tinypic.com/k12r10.jpg");
		listData.add("http://i58.tinypic.com/2e3daug.jpg");
		listData.add("http://i59.tinypic.com/2igznfr.jpg");

		return listData;
	}

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.main);

		fragmentMap = new HashMap<String, Fragment>();

		// Slide menu
		mDrawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);
		mDrawerLayout.openDrawer(Gravity.START);
		mDrawerLayout.closeDrawer(Gravity.START);

		navMenuTitles = getResources().getStringArray(R.array.nav_drawer_items);
		navMenuIcons = getResources()
				.obtainTypedArray(R.array.nav_drawer_icons);

		navDrawerItems = new ArrayList<NavDrawerItem>();
		for (int i = 0; i < navMenuTitles.length; i++) {
			navDrawerItems.add(new NavDrawerItem(navMenuTitles[i], navMenuIcons
					.getResourceId(i, -1), false, ""));
		}
		navMenuIcons.recycle();

		mDrawerList = (ListView) findViewById(R.id.list_slidermenu);
		adapter = new NavDrawerListAdapter(getApplicationContext(),
				navDrawerItems);
		mDrawerList.setAdapter(adapter);

		// Enabling action bar app icon and behaving it as toggle button
		getSupportActionBar().setDisplayHomeAsUpEnabled(false);
		getSupportActionBar().setHomeButtonEnabled(true);
		getSupportActionBar().setIcon(R.drawable.ic_drawer);
		getSupportActionBar().setBackgroundDrawable(
				new ColorDrawable(Color.parseColor("#FF0000")));

		mDrawerToggle = new ActionBarDrawerToggle(this, mDrawerLayout,
				R.drawable.ic_drawer, R.string.app_name, R.string.main_menu) {
			public void onDrawerClosed(View view) {
				getActionBar().setTitle("Cadena 1");
				// calling onPrepareOptionsMenu() to show action bar icons
				invalidateOptionsMenu();
			}

			// TODO check
			public void onDrawerOpened(View drawerView) {
				getActionBar().setTitle("Cadena 2");
				// calling onPrepareOptionsMenu() to hide action bar icons
				invalidateOptionsMenu();
			}

		};

		mDrawerList.setOnItemClickListener(new SlideMenuClickListener());


		fragmentManager = getSupportFragmentManager();
		if (savedInstanceState != null) {
			// Restore the fragment's instance
			fragment = fragmentManager.getFragment(savedInstanceState,
					"fragment");
			replaceFragment(fragment, "fragment");
		} else{
			// Load first fragment
			
			fragment = new HomeFragment(this);
			// Fragment fragment = new CategoryFragment(name,pic,price);
			// Fragment fragment = new ProductListFragment();
			addFragment(fragment);
		}

	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {

		if (item.getItemId() == android.R.id.home) {

			if (mDrawerLayout.isDrawerOpen(mDrawerList)) {
				mDrawerLayout.closeDrawer(mDrawerList);
			} else {
				mDrawerLayout.openDrawer(mDrawerList);
			}
		}

		return super.onOptionsItemSelected(item);
	}

	@Override
	public boolean onPrepareOptionsMenu(Menu menu) {
		// if nav drawer is opened, hide the action items
		boolean drawerOpen = mDrawerLayout.isDrawerOpen(mDrawerList);
		// menu.findItem(R.id.option1).setVisible(!drawerOpen);
		return super.onPrepareOptionsMenu(menu);
	}

	@Override
	protected void onPostCreate(Bundle savedInstanceState) {
		super.onPostCreate(savedInstanceState);
		// Sync the toggle state after onRestoreInstanceState has occurred.
		mDrawerToggle.syncState();
	}

	@Override
	public void onConfigurationChanged(Configuration newConfig) {
		super.onConfigurationChanged(newConfig);
		// Pass any configuration change to the drawer toggles
		mDrawerToggle.onConfigurationChanged(newConfig);
	}

	private void addFragment(Fragment fragment) {
		if (fragment != null) {
			fragmentManager.beginTransaction()
					.add(R.id.frame_container, fragment).commit();
		}
	}

	static public void replaceFragment(Fragment fragment, String tag) {
		if (fragment != null) {
			MainActivity.fragment = fragment;
			fragmentManager.beginTransaction()
					.replace(R.id.frame_container, fragment, tag).commit();
			currentFragment = tag;
		}
	}

	@Override
	protected void onSaveInstanceState(Bundle outState) {
		super.onSaveInstanceState(outState);
		// outState.putString("CurrentFragment", currentFragment);

		fragmentManager.putFragment(outState, "fragment", fragment);
	}

//	@Override
//	protected void onRestoreInstanceState(Bundle savedInstanceState) {
//		super.onRestoreInstanceState(savedInstanceState);
//
//		if (savedInstanceState != null) {
//			// Restore the fragment's instance
//			fragment = fragmentManager.getFragment(savedInstanceState,
//					"fragment");
//			replaceFragment(fragment, "fragment");
//		}
//		// currentFragment = savedInstanceState.getString("CurrentFragment");
//		// fragmentManager.beginTransaction().replace(R.id.frame_container,
//		// fragmentManager.findFragmentByTag(currentFragment)).commit();
//	}

	private void displayView(int position) {
		String fragmentName = null;
		switch (position) {
		case 0:
			fragment = new HomeFragment(this);
			fragmentName = "HOME_FRAGMENT";
			break;
		case 1:
			fragment = new CategoryFragment(HomeFragment.name,
					HomeFragment.pic, HomeFragment.price);
			fragmentName = "CATEGORY_FRAGMENT";
			break;
		default:
			break;
		}

		replaceFragment(fragment, fragmentName);
		mDrawerList.setItemChecked(position, true);
		mDrawerList.setSelection(position);
		mDrawerLayout.closeDrawer(mDrawerList);
	}

	private class SlideMenuClickListener implements
			ListView.OnItemClickListener {
		@Override
		public void onItemClick(AdapterView<?> parent, View view, int position,
				long id) {
			// display view for selected nav drawer item
			displayView(position);
		}
	}
}
